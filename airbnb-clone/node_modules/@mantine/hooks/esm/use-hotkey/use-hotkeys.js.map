{"version":3,"file":"use-hotkeys.js","sources":["../../src/use-hotkey/use-hotkeys.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { getHotkeyMatcher, getHotkeyHandler } from './parse-hotkey';\n\nexport { getHotkeyHandler };\n\ntype HokeyItem = [string, (event: KeyboardEvent) => void];\n\nexport function useHotkeys(hotkeys: HokeyItem[]) {\n  // if (typeof hotkey !== 'string' && process.env.NODE_ENV === 'development') {\n  //   // eslint-disable-next-line no-console\n  //   console.error(\n  //     `[@mantine/hooks] use-hotkey hook received invalid hotkey type, expected string, instead got ${typeof hotkey}`\n  //   );\n  // }\n\n  useEffect(() => {\n    const keydownListener = (event: KeyboardEvent) => {\n      hotkeys.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(event)) {\n          event.preventDefault();\n          handler(event);\n        }\n      });\n    };\n\n    document.documentElement.addEventListener('keydown', keydownListener);\n    return () => document.documentElement.removeEventListener('keydown', keydownListener);\n  }, [hotkeys]);\n}\n"],"names":[],"mappings":";;;;AAGO,SAAS,UAAU,CAAC,OAAO,EAAE;AACpC,EAAE,SAAS,CAAC,MAAM;AAClB,IAAI,MAAM,eAAe,GAAG,CAAC,KAAK,KAAK;AACvC,MAAM,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK;AAC7C,QAAQ,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;AAC7C,UAAU,KAAK,CAAC,cAAc,EAAE,CAAC;AACjC,UAAU,OAAO,CAAC,KAAK,CAAC,CAAC;AACzB,SAAS;AACT,OAAO,CAAC,CAAC;AACT,KAAK,CAAC;AACN,IAAI,QAAQ,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAC1E,IAAI,OAAO,MAAM,QAAQ,CAAC,eAAe,CAAC,mBAAmB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAC1F,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AAChB;;;;"}