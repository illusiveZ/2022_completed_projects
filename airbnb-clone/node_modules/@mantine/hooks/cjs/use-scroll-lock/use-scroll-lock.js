'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var react = require('react');

function useScrollLock(lock) {
  const [scrollLocked, setScrollLocked] = react.useState(lock || false);
  const locked = react.useRef(false);
  const bodyOverflow = react.useRef(null);
  const unlockScroll = () => {
    if (locked.current) {
      locked.current = false;
      document.body.style.overflow = bodyOverflow.current || "";
    }
  };
  const lockScroll = () => {
    locked.current = true;
    bodyOverflow.current = document.body.style.overflow;
    document.body.style.overflow = "hidden";
  };
  react.useEffect(() => {
    if (scrollLocked) {
      lockScroll();
    } else {
      unlockScroll();
    }
    return unlockScroll;
  }, [scrollLocked]);
  react.useEffect(() => {
    if (lock !== void 0) {
      setScrollLocked(lock);
    }
  }, [lock]);
  react.useEffect(() => {
    if (lock === void 0 && typeof window !== "undefined") {
      window.document.body.style.overflow === "hidden" && setScrollLocked(true);
    }
  }, [setScrollLocked]);
  return [scrollLocked, setScrollLocked];
}

exports.useScrollLock = useScrollLock;
//# sourceMappingURL=use-scroll-lock.js.map
