'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var createMemoStyles = require('../../../theme/create-memo-styles.js');
var getSizeValue = require('../../../theme/utils/get-size-value/get-size-value.js');

const sizes = {
  xs: 16,
  sm: 22,
  md: 26,
  lg: 30,
  xl: 36
};
const fontSizes = {
  xs: 10,
  sm: 12,
  md: 14,
  lg: 16,
  xl: 18
};
var useStyles = createMemoStyles.createMemoStyles({
  defaultValue: ({ theme, size, disabled, radius }) => ({
    display: "flex",
    alignItems: "center",
    backgroundColor: disabled ? theme.colorScheme === "dark" ? theme.colors.dark[5] : theme.colors.gray[3] : theme.colorScheme === "dark" ? theme.colors.dark[7] : theme.colors[theme.primaryColor][1],
    color: disabled ? theme.colorScheme === "dark" ? theme.colors.dark[1] : theme.colors.gray[7] : theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.colors[theme.primaryColor][9],
    lineHeight: 1,
    height: getSizeValue.getSizeValue({ size, sizes }),
    paddingLeft: getSizeValue.getSizeValue({ size, sizes: theme.spacing }),
    paddingRight: disabled ? getSizeValue.getSizeValue({ size, sizes: theme.spacing }) : 0,
    fontWeight: 500,
    fontSize: getSizeValue.getSizeValue({ size, sizes: fontSizes }),
    borderRadius: getSizeValue.getSizeValue({ size: radius, sizes: theme.radius }),
    cursor: disabled ? "not-allowed" : "default",
    userSelect: "none"
  }),
  defaultValueRemove: ({ theme, size }) => ({
    color: theme.colorScheme === "dark" ? theme.colors.dark[0] : theme.colors[theme.primaryColor][9],
    marginLeft: getSizeValue.getSizeValue({ size, sizes: theme.spacing }) / 6
  })
});

exports.default = useStyles;
//# sourceMappingURL=DefaultValue.styles.js.map
