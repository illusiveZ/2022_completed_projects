'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var createMemoStyles = require('../../theme/create-memo-styles.js');
var getSizeValue = require('../../theme/utils/get-size-value/get-size-value.js');
var getSharedColorScheme = require('../../theme/utils/get-shared-color-scheme/get-shared-color-scheme.js');
var getFontStyles = require('../../theme/utils/get-font-styles/get-font-styles.js');

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const sizes = {
  xs: 16,
  sm: 26,
  md: 38,
  lg: 56,
  xl: 84
};
var useStyles = createMemoStyles.createMemoStyles({
  root: ({ size, radius, theme }) => ({
    boxSizing: "border-box",
    position: "relative",
    userSelect: "none",
    overflow: "hidden",
    width: getSizeValue.getSizeValue({ size, sizes }),
    height: getSizeValue.getSizeValue({ size, sizes }),
    borderRadius: radius ? getSizeValue.getSizeValue({ size: radius, sizes: theme.radius }) : size
  }),
  image: {
    objectFit: "cover",
    width: "100%",
    height: "100%"
  },
  placeholder: ({ theme, size, color }) => {
    const colors = getSharedColorScheme.getSharedColorScheme({ theme, color, variant: "light" });
    return __spreadProps(__spreadValues({}, getFontStyles.getFontStyles(theme)), {
      fontSize: getSizeValue.getSizeValue({ size, sizes }) / 2.5,
      color: colors.color,
      fontWeight: 700,
      backgroundColor: colors.background,
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      width: "100%",
      height: "100%",
      userSelect: "none"
    });
  },
  placeholderIcon: ({ theme, color }) => ({
    width: "70%",
    height: "70%",
    color: getSharedColorScheme.getSharedColorScheme({ theme, color, variant: "light" }).color
  })
});

exports.default = useStyles;
exports.sizes = sizes;
//# sourceMappingURL=Avatar.styles.js.map
