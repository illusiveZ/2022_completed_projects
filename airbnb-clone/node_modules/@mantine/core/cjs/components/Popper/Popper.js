'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var cx = require('clsx');
var reactPopper = require('react-popper');
var hooks = require('@mantine/hooks');
var Popper_styles = require('./Popper.styles.js');
var Portal = require('../Portal/Portal.js');
var Transition = require('../Transition/Transition.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e['default'] : e; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cx__default = /*#__PURE__*/_interopDefaultLegacy(cx);

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
function parsePopperPosition(position) {
  if (typeof position !== "string") {
    return { position: "top", placement: "center" };
  }
  const splitted = position.split("-");
  if (splitted.length === 1) {
    return { position, placement: "center" };
  }
  return { position: splitted[0], placement: splitted[1] };
}
function Popper({
  position = "top",
  placement = "center",
  gutter = 5,
  arrowSize = 2,
  withArrow = false,
  referenceElement,
  children,
  mounted,
  transition = "pop-top-left",
  transitionDuration,
  transitionTimingFunction,
  arrowClassName,
  arrowStyle,
  zIndex = 1,
  forceUpdateDependencies = []
}) {
  var _a;
  const padding = withArrow ? gutter + arrowSize : gutter;
  const classes = Popper_styles['default']({ arrowSize });
  const [popperElement, setPopperElement] = React.useState(null);
  const { styles, attributes, forceUpdate } = reactPopper.usePopper(referenceElement, popperElement, {
    placement: placement === "center" ? position : `${position}-${placement}`,
    modifiers: [{ name: "offset", options: { offset: [0, padding] } }]
  });
  const parsedAttributes = parsePopperPosition((_a = attributes.popper) == null ? void 0 : _a["data-popper-placement"]);
  hooks.useDidUpdate(() => {
    typeof forceUpdate === "function" && forceUpdate();
  }, forceUpdateDependencies);
  return /* @__PURE__ */ React__default.createElement(Transition.Transition, {
    mounted,
    duration: transitionDuration,
    transition,
    timingFunction: transitionTimingFunction
  }, (transitionStyles) => /* @__PURE__ */ React__default.createElement("div", null, /* @__PURE__ */ React__default.createElement(Portal.Portal, {
    zIndex
  }, /* @__PURE__ */ React__default.createElement("div", __spreadValues({
    ref: setPopperElement,
    style: __spreadProps(__spreadValues({}, styles.popper), { pointerEvents: "none" })
  }, attributes.popper), /* @__PURE__ */ React__default.createElement("div", {
    style: transitionStyles
  }, children, withArrow && /* @__PURE__ */ React__default.createElement("div", {
    style: arrowStyle,
    className: cx__default(classes.arrow, classes[parsedAttributes.placement], classes[parsedAttributes.position], arrowClassName)
  }))))));
}
Popper.displayName = "@mantine/core/Popper";

exports.Popper = Popper;
//# sourceMappingURL=Popper.js.map
