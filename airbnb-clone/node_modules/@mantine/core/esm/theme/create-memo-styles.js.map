{"version":3,"file":"create-memo-styles.js","sources":["../../src/theme/create-memo-styles.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { createUseStyles, Styles } from 'react-jss';\nimport { mergeClassNames } from './utils/merge-class-names/merge-class-names';\nimport { MantineTheme } from './types';\n\nexport function createMemoStyles<C extends string = string, Props = unknown>(\n  styles: Styles<C, Props, MantineTheme>\n) {\n  const useStyles = createUseStyles<C, Props, MantineTheme>(styles);\n\n  return function useMemoStyles(\n    args?: Props,\n    classNames?: Partial<Record<C, string>>,\n    name?: string\n  ) {\n    const validArgs = typeof args === 'object' && args !== null;\n\n    const dependencies = validArgs\n      ? Object.keys(args)\n          .filter((key) => key !== 'theme')\n          .map((key) => args[key])\n      : [];\n\n    if (validArgs && 'theme' in args) {\n      dependencies.push((args as any).theme.colorScheme);\n    }\n\n    const stylesProps = useMemo(() => args, dependencies);\n    return mergeClassNames(useStyles(stylesProps), classNames, name);\n  };\n}\n"],"names":[],"mappings":";;;;AAGO,SAAS,gBAAgB,CAAC,MAAM,EAAE;AACzC,EAAE,MAAM,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;AAC5C,EAAE,OAAO,SAAS,aAAa,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;AACxD,IAAI,MAAM,SAAS,GAAG,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC;AAChE,IAAI,MAAM,YAAY,GAAG,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACrH,IAAI,IAAI,SAAS,IAAI,OAAO,IAAI,IAAI,EAAE;AACtC,MAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AAChD,KAAK;AACL,IAAI,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,YAAY,CAAC,CAAC;AAC1D,IAAI,OAAO,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AACrE,GAAG,CAAC;AACJ;;;;"}