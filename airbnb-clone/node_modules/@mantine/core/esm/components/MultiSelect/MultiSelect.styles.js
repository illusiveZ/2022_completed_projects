import { INPUT_SIZES } from '../Input/Input.js';
import { createMemoStyles } from '../../theme/create-memo-styles.js';
import { getSizeValue } from '../../theme/utils/get-size-value/get-size-value.js';

var useStyles = createMemoStyles({
  wrapper: {
    position: "relative"
  },
  values: ({ theme, size }) => ({
    minHeight: getSizeValue({ size, sizes: INPUT_SIZES }) - 2,
    display: "flex",
    alignItems: "center",
    flexWrap: "wrap",
    marginLeft: -theme.spacing.xs / 2,
    paddingTop: theme.spacing.xs / 2 - 2,
    paddingBottom: theme.spacing.xs / 2 - 2,
    boxSizing: "border-box"
  }),
  value: ({ theme }) => ({
    margin: [theme.spacing.xs / 2 - 2, theme.spacing.xs / 2]
  }),
  searchInput: ({ theme, invalid, size }) => ({
    width: 60,
    backgroundColor: "transparent",
    border: 0,
    outline: 0,
    fontSize: getSizeValue({ size, sizes: theme.fontSizes }),
    padding: 0,
    margin: theme.spacing.xs / 2,
    appearance: "none",
    color: "inherit",
    "&::placeholder": {
      color: invalid ? theme.colors.red[theme.colorScheme === "dark" ? 6 : 7] : theme.colorScheme === "dark" ? theme.colors.dark[2] : theme.colors.gray[5]
    },
    "&:disabled": {
      cursor: "not-allowed"
    }
  }),
  searchInputEmpty: () => ({
    width: "100%"
  }),
  searchInputInputHidden: () => ({
    width: 0,
    height: 0,
    margin: 0,
    overflow: "hidden"
  }),
  searchInputPointer: {
    cursor: "pointer",
    "&:disabled": {
      cursor: "not-allowed"
    }
  }
});

export default useStyles;
//# sourceMappingURL=MultiSelect.styles.js.map
