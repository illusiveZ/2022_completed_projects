import { createMemoStyles } from '../../theme/create-memo-styles.js';

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
const horizontalPlacement = (arrowSize) => ({
  "&$center": {
    top: `calc(50% - ${arrowSize}px)`
  },
  "&$end": {
    bottom: arrowSize * 2
  },
  "&$start": {
    top: arrowSize * 2
  }
});
const verticalPlacement = (arrowSize) => ({
  "&$center": {
    left: `calc(50% - ${arrowSize}px)`
  },
  "&$end": {
    right: arrowSize * 2
  },
  "&$start": {
    left: arrowSize * 2
  }
});
var useStyles = createMemoStyles({
  center: {},
  start: {},
  end: {},
  arrow: ({ arrowSize }) => ({
    width: arrowSize * 2,
    height: arrowSize * 2,
    position: "absolute",
    transform: "rotate(45deg)",
    border: "1px solid transparent",
    zIndex: 1
  }),
  left: ({ arrowSize }) => __spreadProps(__spreadValues({}, horizontalPlacement(arrowSize)), {
    right: -arrowSize,
    borderLeft: 0,
    borderBottom: 0
  }),
  right: ({ arrowSize }) => __spreadProps(__spreadValues({}, horizontalPlacement(arrowSize)), {
    left: -arrowSize,
    borderRight: 0,
    borderTop: 0
  }),
  top: ({ arrowSize }) => __spreadProps(__spreadValues({}, verticalPlacement(arrowSize)), {
    bottom: -arrowSize,
    borderLeft: 0,
    borderTop: 0
  }),
  bottom: ({ arrowSize }) => __spreadProps(__spreadValues({}, verticalPlacement(arrowSize)), {
    top: -arrowSize,
    borderRight: 0,
    borderBottom: 0
  })
});

export default useStyles;
//# sourceMappingURL=Popper.styles.js.map
