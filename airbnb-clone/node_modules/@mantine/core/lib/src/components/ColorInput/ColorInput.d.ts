import React from 'react';
import { DefaultProps } from '../../theme';
import { InputWrapperBaseProps, InputWrapperStylesNames } from '../InputWrapper/InputWrapper';
import { InputBaseProps, InputStylesNames } from '../Input/Input';
import { MantineTransition } from '../Transition/Transition';
import { ColorPickerBaseProps, ColorPickerStylesNames } from '../ColorPicker/ColorPicker';
import useStyles from './ColorInput.styles';
export declare type ColorInputStylesNames = InputWrapperStylesNames | InputStylesNames | ColorPickerStylesNames | keyof ReturnType<typeof useStyles>;
export interface ColorInputProps extends InputWrapperBaseProps, InputBaseProps, ColorPickerBaseProps, DefaultProps<ColorInputStylesNames>, Omit<React.ComponentPropsWithoutRef<'input'>, 'size' | 'onChange' | 'defaultValue' | 'value'> {
    /** Disallow free input */
    disallowInput?: boolean;
    /** call onChange with last valid value onBlur */
    fixOnBlur?: boolean;
    /** Dropdown element z-index */
    dropdownZIndex?: number;
    /** Display swatch with color preview on the left side of input */
    withPreview?: boolean;
    /** Dropdown transition name or object */
    transition?: MantineTransition;
    /** Dropdown appear/disappear transition duration in ms */
    transitionDuration?: number;
    /** Dropdown transition timing function, defaults to theme.transitionTimingFunction */
    transitionTimingFunction?: string;
}
export declare function ColorInput({ label, description, error, required, wrapperProps, size, format, onChange, onFocus, onBlur, value, defaultValue, classNames, styles, themeOverride, disallowInput, fixOnBlur, withPreview, swatchesPerRow, withPicker, icon, transition, id, dropdownZIndex, transitionDuration, transitionTimingFunction, className, style, swatches, ...others }: ColorInputProps): JSX.Element;
export declare namespace ColorInput {
    var displayName: string;
}
//# sourceMappingURL=ColorInput.d.ts.map