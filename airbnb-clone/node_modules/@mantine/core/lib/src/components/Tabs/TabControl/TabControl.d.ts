import React from 'react';
import { DefaultProps } from '../../../theme';
import { TabProps } from '../Tab/Tab';
import type { TabsVariant } from '../Tabs';
import useStyles from './TabControl.styles';
export declare type TabControlStylesNames = Exclude<keyof ReturnType<typeof useStyles>, TabsVariant>;
export interface TabControlProps extends DefaultProps<TabControlStylesNames>, React.ComponentPropsWithoutRef<'button'> {
    active: boolean;
    elementRef(node: HTMLButtonElement): void;
    tabProps: TabProps;
    color?: string;
    variant?: TabsVariant;
    orientation?: 'horizontal' | 'vertical';
    icon?: React.ReactNode;
}
export declare function TabControl({ className, style, themeOverride, active, elementRef, tabProps, color, variant, classNames, styles, orientation, icon: __, ...others }: TabControlProps): JSX.Element;
export declare namespace TabControl {
    var displayName: string;
}
//# sourceMappingURL=TabControl.d.ts.map