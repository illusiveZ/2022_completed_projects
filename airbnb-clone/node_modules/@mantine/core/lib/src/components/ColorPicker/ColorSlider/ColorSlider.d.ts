import React from 'react';
import { DefaultProps, MantineSize } from '../../../theme';
import { ThumbStylesNames } from '../Thumb/Thumb';
import useStyles from './ColorSlider.styles';
export declare type ColorSliderStylesNames = Exclude<keyof ReturnType<typeof useStyles>, 'sliderThumb'> | ThumbStylesNames;
export interface BaseColorSliderProps extends DefaultProps<ColorSliderStylesNames>, Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {
    value: number;
    onChange(value: number): void;
    size: MantineSize;
    focusable?: boolean;
    elementRef?: React.ForwardedRef<HTMLDivElement>;
    __staticSelector?: string;
}
interface ColorSliderProps extends BaseColorSliderProps {
    maxValue: number;
    overlays: React.CSSProperties[];
    round: boolean;
    thumbColor?: string;
}
export declare function ColorSlider({ value, onChange, maxValue, round, size, thumbColor, __staticSelector, focusable, elementRef, overlays, themeOverride, classNames, styles, className, style, ...others }: ColorSliderProps): JSX.Element;
export declare namespace ColorSlider {
    var displayName: string;
}
export {};
//# sourceMappingURL=ColorSlider.d.ts.map