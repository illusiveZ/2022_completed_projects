import React from 'react';
import { DefaultProps, MantineNumberSize } from '../../../theme';
import { MantineTransition } from '../../Transition/Transition';
import useStyles from './Thumb.styles';
export declare type ThumbStylesNames = keyof ReturnType<typeof useStyles>;
interface ThumbProps extends DefaultProps<ThumbStylesNames> {
    max: number;
    min: number;
    value: number;
    position: number;
    dragging: boolean;
    color: string;
    size: MantineNumberSize;
    label: React.ReactNode;
    elementRef: React.ForwardedRef<HTMLDivElement>;
    onMouseDown(event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>): void;
    labelTransition?: MantineTransition;
    labelTransitionDuration?: number;
    labelTransitionTimingFunction?: string;
    labelAlwaysOn: boolean;
    thumbLabel: string;
    onFocus?(): void;
    onBlur?(): void;
}
export declare function Thumb({ max, min, value, position, label, elementRef, dragging, onMouseDown, color, themeOverride, classNames, styles, size, labelTransition, labelTransitionDuration, labelTransitionTimingFunction, labelAlwaysOn, thumbLabel, onFocus, onBlur, }: ThumbProps): JSX.Element;
export declare namespace Thumb {
    var displayName: string;
}
export {};
//# sourceMappingURL=Thumb.d.ts.map